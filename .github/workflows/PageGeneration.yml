name: Build Pages

on:
  push:
    branches:
      - main
    paths:
      - '**/*.markdown'
      - 'pages/**'
  workflow_dispatch:

jobs:
    build_pages:
        if: github.ref == 'refs/heads/main'
        runs-on: ubuntu-latest
        steps:
          - name: Checkout
            uses: actions/checkout@v4
    
          - name: Setup Pages
            uses: actions/configure-pages@v5
    
          - name: Install Ruby and Bundler
            uses: ruby/setup-ruby@v1
            with:
              ruby-version: '3.0'
              bundler-cache: true
          - name: Download latest artifact
            id: download-artifact
            uses: actions/github-script@v6
            with:
              script: |
                const artifacts = await github.rest.actions.listArtifactsForRepo({
                  owner: context.repo.owner,
                  repo: context.repo.repo
                });
          
                console.log("Available artifacts:", artifacts.data.artifacts);
          
                // Filter and sort artifacts by creation date
                const matchingArtifacts = artifacts.data.artifacts
                  .filter(artifact => artifact.name.startsWith('package_artifact-'))
                  .sort((a, b) => new Date(b.created_at) - new Date(a.created_at));
                console.log("Matching artifacts:", matchingArtifacts);
                if (matchingArtifacts.length > 0) {
                  const latestArtifact = matchingArtifacts[0];
                  core.setOutput('artifact_id', latestArtifact.id);
                  core.setOutput('artifact_name', latestArtifact.name);
                } else {
                  core.setOutput('artifact_id', '');
                  core.setOutput('artifact_name', '');
                }

          - name: Download artifact if exists
            if: steps.download-artifact.outputs.artifact_id != ''
            uses: actions/download-artifact@v4
            with:
              name: ${{ steps.download-artifact.outputs.artifact_name }}
              path: ${{ github.workspace }}/downloaded-artifact
          
          - name: Fallback if no artifact exists
            if: steps.download-artifact.outputs.artifact_id == ''
            run: |
              echo "No matching artifact found. Skipping download."      

          - name: Download Pages
            uses: actions/download-artifact@v4
            with:
              name: ${{ github.event.inputs.PageName }}
              github-token: ${{ secrets.GITHUB_TOKEN }}
              path: pages
              repository: ${{ github.repository }}
              run-id: ${{ github.event.inputs.PagePipelineID }}

          - name: Install Dependencies
            run: |
              cd pages
              bundle install  
              cd ..
    
          - name: Copy markdown files from extra and ownSoftware to pages
            run: |
              find extra ownSoftware -type f -name "*.markdown" -exec sh -c '
                for file; do
                  # Conserva la estructura de carpetas relativa
                  dest="pages/${file%/*}/"
                  mkdir -p "$dest"
                  cp "$file" "$dest"
                done
              ' sh {} +
    
          - name: Build with Jekyll
            uses: actions/jekyll-build-pages@v1
            with:
              source: ./pages
              destination: ./output_dir
    
          - name: Upload artifact-${{ github.sha }}
            uses: actions/upload-artifact@v4
            with: 
              name: pages_artifact-${{ github.sha }}
              path: ./output_dir

          - name: Job ID and Package hash
            run: |
              echo "Run ID:"
              echo ${{github.run_id}}
              echo "Pages hash:"
              echo pages_artifact-${{ github.sha }}
