name: Build Packages

on:
  push:
    branches:
      - main
    paths:
      - '**/PKGBUILD'
      - '**/.SRCINFO'
      - '**/*.py'
      - '**/Bookmarks'
      - '**/*.desktop'
      - '**/*.sh'
      - '**/*.png'
      - '**/COPYING'
      - '**/*.install'
      - '**/*.patch'
      - '**/*.service'
      - '**/*.policy'
      - '**/*.toml'
      - '**/*.default'
      - '**/*.timer'
      - '**/*.asc'
      - '**/*.sysusers'
      - '**/*.tmpfiles.conf'
  workflow_dispatch:

jobs:
  build_packages:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
      options: --privileged

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Install dependencies and prepare directories
      - name: Install dependencies and prepare directories
        run: |
          pacman -Syu --noconfirm base-devel git
          mkdir -p $GITHUB_WORKSPACE/output_dir/pkgs/x86_64
          echo "Dependencies installed and directories created"
          
      # Step 3: Create non-root user
      - name: Create non-root user
        run: |
          pacman -Sy --noconfirm sudo && \
          useradd -m builder && \
          echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

      # Step 4: Build packages
      - name: Build packages
        run: |
          mkdir -p $GITHUB_WORKSPACE/output_dir/pkgs/x86_64
          cd $GITHUB_WORKSPACE
          su - builder -c "
            export GITHUB_WORKSPACE=\$GITHUB_WORKSPACE
            ls $GITHUB_WORKSPACE
            find $GITHUB_WORKSPACE -type f -name PKGBUILD | while read PKGBUILD; do
              dir=$(dirname "$PKGBUILD")
              echo "Building package in $dir"
              cd "$dir" && makepkg -s --noconfirm --skippgpcheck
              mv *.pkg.tar.* $GITHUB_WORKSPACE/output_dir/pkgs/x86_64/
              cd -
            done
          ""

          ls -l $GITHUB_WORKSPACE/output_dir/pkgs/x86_64
          echo "Packages created successfully"
          
      # Step 4: Run repo-add to create the repository database
      - name: Create repository database
        run: |
          pacman -Sy --noconfirm pacman-contrib && echo "Pacman updated"
      
          # Regenerating DB
          cd $GITHUB_WORKSPACE/output_dir/pkgs/x86_64 && repo-add owlArchRepo.db.tar.gz && echo "The DB has been created"
      
          # Adding valid packages to the DB
          find . -type f -name "*.pkg.tar.*" | while read pkg; do
            echo "Working with: $pkg"
      
            # Verify if the package is valid
            if tar -tf "$pkg" &> /dev/null; then
              echo "Package valid: $pkg"
              repo-add owlArchRepo.db.tar.gz "$pkg" && echo "Package added: $pkg"
            else
              echo "Removing invalid package: $pkg"
              rm -f "$pkg"
            fi
          done

      # Step 4: Upload packages to GitHub
      - name: Upload packages to GitHub-${{ github.sha }}
        uses: actions/upload-artifact@v4
        with:
          name: packages_artifact-${{ github.sha }}
          path: output_dir
          if-no-files-found: error
          
      - name: Job ID and Package hash
        run: |
          echo "Run ID:"
          echo ${{github.run_id}}
          echo "Pages hash:"
          echo pages_artifact-${{ github.sha }}
